import{_ as s,c as i,o as e,ag as t}from"./chunks/framework.YPSzFf6x.js";const g=JSON.parse('{"title":"Golang 安装教程","description":"","frontmatter":{},"headers":[],"relativePath":"guide/requirements/backend/golang.md","filePath":"guide/requirements/backend/golang.md","lastUpdated":1749039303000}'),n={name:"guide/requirements/backend/golang.md"};function l(h,a,o,d,p,r){return e(),i("div",null,a[0]||(a[0]=[t(`<h1 id="golang-安装教程" tabindex="-1">Golang 安装教程 <a class="header-anchor" href="#golang-安装教程" aria-label="Permalink to &quot;Golang 安装教程&quot;">​</a></h1><h2 id="📥-下载安装" tabindex="-1">📥 下载安装 <a class="header-anchor" href="#📥-下载安装" aria-label="Permalink to &quot;📥 下载安装&quot;">​</a></h2><h3 id="windows-安装" tabindex="-1">Windows 安装 <a class="header-anchor" href="#windows-安装" aria-label="Permalink to &quot;Windows 安装&quot;">​</a></h3><ol><li>访问：<a href="https://golang.org/dl/" target="_blank" rel="noreferrer">https://golang.org/dl/</a></li><li>下载 <code>go1.21.x.windows-amd64.msi</code></li><li>双击安装包，一路下一步</li><li>安装完成后重启命令提示符</li></ol><h3 id="macos-安装" tabindex="-1">macOS 安装 <a class="header-anchor" href="#macos-安装" aria-label="Permalink to &quot;macOS 安装&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 Homebrew</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> go</span></span></code></pre></div><h3 id="linux-安装" tabindex="-1">Linux 安装 <a class="header-anchor" href="#linux-安装" aria-label="Permalink to &quot;Linux 安装&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ubuntu/Debian</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> golang-go</span></span></code></pre></div><h2 id="✅-验证安装" tabindex="-1">✅ 验证安装 <a class="header-anchor" href="#✅-验证安装" aria-label="Permalink to &quot;✅ 验证安装&quot;">​</a></h2><p>打开终端，输入：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span></span></code></pre></div><p>应该显示：<code>go version go1.21.x</code></p><h2 id="⚙️-配置代理" tabindex="-1">⚙️ 配置代理 <a class="header-anchor" href="#⚙️-配置代理" aria-label="Permalink to &quot;⚙️ 配置代理&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOPROXY=https://goproxy.cn,direct</span></span></code></pre></div>`,14)]))}const k=s(n,[["render",l]]);export{g as __pageData,k as default};
